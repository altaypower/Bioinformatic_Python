"""
Выведите таблицу размером n \times nn×n, заполненную числами от 11 до n ^ 2
n2 по спирали, выходящей из левого верхнего угла и закрученной по часовой стрелке.
"""

size = int(input())

# Создаем нулевую квадратную матрицу заданной размерности
matrix = [[0 for i in range(size)] for j in range(size)]

i = 0  # текущая строка
j = 0  # текущий столбец
kontur = 0  # текущий контур
current = 1  # текущее значение для заполнения ячейки

while current <= size * size:
    matrix[i][j] = current  # заполняем текущим значением

         # Сумма зеркально расположенных элементов от диагонали одинакова для текущего контура.
        # Она равна нижнему правому значению в контуре, умноженному на 2.
        # Так что на каждом шаге цикла мы заполняем зеркальный элемент матрицы,
        # просто вычитая текущее current из этой суммы
    if i != j:
        matrix[j][i] = (matrix[kontur][kontur] + (size - kontur * 2) * 2) * 2 - 4 - current

    if j != size - kontur - 1: # пока не пришли к правой границе контура, идем вправо
        j += 1

    elif i != size - kontur - 1:  # пока  не пришли к нижней границе контура, идем вниз
        i += 1

    elif current != size * size:  # Если закончили обход текущего контура!
        kontur += 1  # переход к следующему контуру
        i = j = kontur  # начало обхода следующего цикла
        current = matrix[kontur][kontur - 1]  # присваиваем наибольшее значение в предыдущем контуре

    current += 1  # в конце цикла

for _ in matrix:
    print(*_)